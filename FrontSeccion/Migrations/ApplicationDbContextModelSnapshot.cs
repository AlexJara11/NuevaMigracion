// <auto-generated />
using System;
using FrontSeccion;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackSeccion1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlumnoSeccion", b =>
                {
                    b.Property<int>("Alumnoid_alu")
                        .HasColumnType("int");

                    b.Property<int>("Seccionid_sec")
                        .HasColumnType("int");

                    b.HasKey("Alumnoid_alu", "Seccionid_sec");

                    b.HasIndex("Seccionid_sec");

                    b.ToTable("Detalle_asig_alumno_seccion", (string)null);
                });

            modelBuilder.Entity("FrontSeccion.Models.Alumno", b =>
                {
                    b.Property<int>("id_alu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_alu"));

                    b.Property<string>("apellidos_alu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("dni_alu")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("nombre_alu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id_alu");

                    b.ToTable("Alumno");
                });

            modelBuilder.Entity("FrontSeccion.Models.Curso", b =>
                {
                    b.Property<int>("id_cur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_cur"));

                    b.Property<string>("descripcion_cur")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<bool>("estado_cur")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("id_cur");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("FrontSeccion.Models.Seccion", b =>
                {
                    b.Property<int>("id_sec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_sec"));

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<int>("aula_sec")
                        .HasColumnType("int");

                    b.Property<bool>("estado_sec")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("fecha_registro_sec")
                        .HasColumnType("date");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("id_sec");

                    b.HasIndex("CursoId");

                    b.ToTable("Seccion");
                });

            modelBuilder.Entity("AlumnoSeccion", b =>
                {
                    b.HasOne("FrontSeccion.Models.Alumno", null)
                        .WithMany()
                        .HasForeignKey("Alumnoid_alu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrontSeccion.Models.Seccion", null)
                        .WithMany()
                        .HasForeignKey("Seccionid_sec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FrontSeccion.Models.Seccion", b =>
                {
                    b.HasOne("FrontSeccion.Models.Curso", "Curso")
                        .WithMany("Seccion")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("FrontSeccion.Models.Curso", b =>
                {
                    b.Navigation("Seccion");
                });
#pragma warning restore 612, 618
        }
    }
}
